/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_LAYER 0
#define ART 1
#define ART_DUO 2
#define ALT 3
#define FUNCTION 4
#define LEFT_NUMPAD 5

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        rsft_rspc_rctl {
            bindings = <&kp RIGHT_CONTROL>;
            key-positions = <54 55>;
        };

        rspc_rbkspc_del {
            bindings = <&kp DELETE>;
            key-positions = <53 54>;
        };

        lctl_bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <51 52>;
        };

        redo3tap {
            bindings = <&kp LC(Y)>;
            key-positions = <3 4>;
        };
    };

    macros {
        macro_shotapple: macro_shotapple {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&kp NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "MACRO_SHOTAPPLE";
        };
    };

    behaviors {
        dtap_comm: dtap_comm {
            compatible = "zmk,behavior-tap-dance";
            label = "DTAP_COMM";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LEFT_BRACKET>;
        };

        dtap_dot: dtap_dot {
            compatible = "zmk,behavior-tap-dance";
            label = "DTAP_DOT";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp RIGHT_BRACKET>;
        };

        dtap_plus: dtap_plus {
            compatible = "zmk,behavior-tap-dance";
            label = "DTAP_PLUS";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp KP_MULTIPLY>;
        };

        dtap_minus: dtap_minus {
            compatible = "zmk,behavior-tap-dance";
            label = "DTAP_MINUS";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp SLASH>;
        };

        dtap_slash: dtap_slash {
            compatible = "zmk,behavior-tap-dance";
            label = "DTAP_SLASH";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp BACKSLASH>;
        };

        dtap_quote: dtap_quote {
            compatible = "zmk,behavior-tap-dance";
            label = "DTAP_QUOTE";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp SEMICOLON>;
        };

        dtap_del: dtap_del {
            compatible = "zmk,behavior-tap-dance";
            label = "DTAP_DEL";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            tapping-term-ms = <150>;
        };

        tap_l4_l5: tap_l4_l5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_L4_L5";
            #binding-cells = <0>;
            bindings = <&tog 4>, <&tog 5>;
        };

        dtap_esc_bkquote: dtap_esc_bkquote {
            compatible = "zmk,behavior-tap-dance";
            label = "DTAP_ESC_BKQUOTE";
            #binding-cells = <0>;
            bindings = <&kp GRAVE>, <&kp ESCAPE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&dtap_esc_bkquote  &kp N1        &kp N2  &kp N3     &kp N4     &kp N5       &kp N6         &kp N7     &kp N8           &kp N9     &kp N0       &dtap_plus
&kp TAB            &kp Q         &kp W   &kp E      &kp R      &kp T        &kp Y          &kp U      &kp I            &kp O      &kp P        &dtap_minus
&kp LEFT_SHIFT     &kp A         &kp S   &kp D      &kp F      &kp G        &kp H          &kp J      &kp K            &kp L      &dtap_quote  &kp ENTER
&kp LEFT_ALT       &kp Z         &kp X   &kp C      &kp V      &kp B        &kp N          &kp M      &dtap_comm       &dtap_dot  &dtap_slash  &mt RSHFT ESCAPE
&kp LEFT_GUI       &kp CAPSLOCK  &tog 1  &kp LCTRL  &kp SPACE  &lt 3 ENTER  &kp BACKSPACE  &kp SPACE  &kp RIGHT_SHIFT  &kp RALT   &tap_l4_l5
                                                                            &kp CAPS       &kp RIGHT  &kp UP_ARROW     &kp LEFT   &kp DOWN
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp PG_UP PG_UP>;
        };

        art {
            label = "art";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp LC(LALT)  &kp ESC          &kp LC(D)  &kp LCTRL  &kp LSHFT  &kp P     &none         &none              &kp KP_NUMLOCK   &kp KP_DIVIDE     &kp KP_MULTIPLY  &kp KP_MINUS
&kp SPACE     &kp TAB          &kp F      &kp E      &kp Z      &kp C     &none         &none              &kp KP_N7        &kp KP_NUMBER_8   &kp KP_N9        &kp KP_PLUS
&kp LALT      &kp Y            &kp D      &kp LC(Z)  &kp F2     &kp T     &none         &none              &kp KP_NUMBER_4  &kp KP_NUMBER_5   &kp KP_N6        &dtap_del
&kp L         &kp U            &kp W      &kp X      &kp H      &kp LALT  &none         &none              &kp KP_NUMBER_1  &kp KP_NUMBER_2   &kp KP_NUMBER_3  &kp KP_ENTER
&kp HOME      &kp KP_NUMBER_5  &trans     &mo 2      &kp SPACE  &mo 2     &trans        &trans             &none            &kp KP_NUMBER_0   &kp KP_DOT
                                                                          &kp NUMBER_4  &kp RIGHT_BRACKET  &kp LC(Y)        &kp LEFT_BRACKET  &kp LC(Z)
            >;

            sensor-bindings =
                <&inc_dec_kp PG_UP PG_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        art_duo {
            label = "art_duo";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&kp N4  &kp N5     &kp LC(A)  &kp LC(C)  &kp LC(V)  &kp F7  &trans  &trans     &trans        &trans    &trans    &trans
&kp N3  &kp F6     &kp F1     &kp J      &kp G      &kp Q   &trans  &trans     &trans        &trans    &trans    &trans
&kp N2  &kp F8     &kp N      &kp LC(Y)  &kp DOT    &kp A   &trans  &trans     &trans        &trans    &trans    &trans
&kp M   &kp LC(S)  &kp V      &kp B      &kp N1     &trans  &trans  &trans     &trans        &trans    &trans    &trans
&trans  &trans     &trans     &trans     &trans     &trans  &trans  &trans     &trans        &trans    &trans
                                                            &none   &kp RIGHT  &kp UP_ARROW  &kp LEFT  &kp DOWN
            >;

            sensor-bindings =
                <&inc_dec_kp END DELETE>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        alt {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "alt";
            bindings = <
&kp ESC     &kp ESC    &macro_shotapple  &kp LC(C)         &kp LC(Z)      &kp LC(V)  &none     &none          &kp KP_NUM       &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_MINUS
&kp TAB     &kp ESC    &kp LA(LEFT)      &kp UP            &kp LA(RIGHT)  &kp HOME   &none     &none          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS
&kp CAPS    &kp LCTRL  &kp LEFT          &kp DOWN          &kp RIGHT      &kp END    &none     &none          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &dtap_del
&none       &kp LSHFT  &kp C_PREV        &kp C_PLAY_PAUSE  &kp C_NEXT     &kp K_APP  &none     &none          &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER
&kp C_MUTE  &none      &none             &none             &none          &none      &none     &to 0          &none            &kp KP_NUMBER_0  &kp KP_NUMBER_1
                                                                                     &kp CAPS  &kp LC(RIGHT)  &kp PG_UP        &kp LC(LEFT)     &kp PG_DN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        function {
            bindings = <
&kp F13  &kp F14  &kp F15  &kp F1   &kp F2   &kp F3   &none  &none  &none  &none  &none  &none
&kp F16  &kp F17  &kp F18  &kp F4   &kp F5   &kp F6   &none  &none  &none  &none  &none  &none
&kp F19  &kp F20  &kp F21  &kp F7   &kp F8   &kp F9   &none  &none  &none  &none  &none  &none
&kp F22  &kp F23  &kp F24  &kp F10  &kp F11  &kp F12  &none  &none  &none  &none  &none  &none
&none    &none    &none    &none    &to 0    &none    &none  &to 0  &none  &none  &to 0
                                                      &none  &none  &none  &none  &none
            >;

            label = "fnx";
        };

        left_numpad {
            bindings = <
&none  &none  &kp KP_NUMLOCK   &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_MINUS  &none  &none  &none  &none  &none  &none
&none  &none  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS   &none  &none  &none  &none  &none  &none
&none  &none  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &dtap_del     &none  &none  &none  &none  &none  &none
&none  &none  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &none  &none  &none  &none  &none  &none
&none  &none  &kp KP_NUMBER_0  &kp KP_DOT       &kp KP_EQUAL     &none         &none  &to 0  &none  &none  &to 0
                                                                               &none  &none  &none  &none  &none
            >;

            label = "left_num";
        };
    };
};
